<Window x:Class="UnityInspector.GUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:UnityInspector.GUI"
        xmlns:vm="clr-namespace:UnityInspector.GUI.ViewModels"
        xmlns:cv="clr-namespace:UnityInspector.GUI.Converters"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        Background="{DynamicResource MainWindowBackgroundBrush}"
        Title="UnityInspector" Height="600" Width="800" Closing="Window_Closing">
    <Window.Resources>

        <cv:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <cv:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverterInverted" True="Collapsed" False="Visible" />
        <cv:ICollectionToBooleanConverter x:Key="ICollectionToBooleanConverter"/>
        <cv:ObjectMemberTemplateSelector x:Key="ObjectMemberTemplateSelector"/>
        
        <DataTemplate x:Key="BoolMemberDataTemplate">
            <CheckBox IsChecked="{Binding Value}" />
        </DataTemplate>
        <DataTemplate x:Key="TextBoxMemberDataTemplate">
            <TextBox Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}"/>
        </DataTemplate>
        <DataTemplate x:Key="NumericMemberDataTemplate">
            <vm:NumericTextBox Text="{Binding Value, UpdateSourceTrigger=Explicit}"/>
        </DataTemplate>
        <DataTemplate x:Key="GameObjectMemberDataTemplate">
            <TextBlock>
                <Run Text="GameObject: "/>
                <Run Text="{Binding Value}"/>
            </TextBlock>
        </DataTemplate>
        <DataTemplate x:Key="Vector3MemberDataTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <vm:NumericTextBox Grid.Column="0" Text="{Binding Value.X, UpdateSourceTrigger=Explicit}"/>
                <vm:NumericTextBox Grid.Column="2" Text="{Binding Value.Y, UpdateSourceTrigger=Explicit}"/>
                <vm:NumericTextBox Grid.Column="4" Text="{Binding Value.Z, UpdateSourceTrigger=Explicit}"/>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="Vector2MemberDataTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <vm:NumericTextBox Grid.Column="0" Text="{Binding Value.X, UpdateSourceTrigger=Explicit}"/>
                <vm:NumericTextBox Grid.Column="2" Text="{Binding Value.Y, UpdateSourceTrigger=Explicit}"/>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="RectMemberDataTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <vm:NumericTextBox Grid.Row="0" Grid.Column="0" Text="{Binding Value.X, UpdateSourceTrigger=Explicit}"/>
                <vm:NumericTextBox Grid.Row="0" Grid.Column="2" Text="{Binding Value.Y, UpdateSourceTrigger=Explicit}"/>
                <vm:NumericTextBox Grid.Row="1" Grid.Column="0" Text="{Binding Value.W, UpdateSourceTrigger=Explicit}"/>
                <vm:NumericTextBox Grid.Row="1" Grid.Column="2" Text="{Binding Value.H, UpdateSourceTrigger=Explicit}"/>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="EnumMemberDataTemplate">
            <ComboBox ItemsSource="{Binding Value.Values}" SelectedItem="{Binding Value.Value}" />
        </DataTemplate>
        <DataTemplate x:Key="ColorMemberDataTemplate">
            <xctk:ColorPicker ShowDropDownButton="False" SelectedColor="{Binding Value}" ColorMode="ColorCanvas" ShowTabHeaders="False" />
        </DataTemplate>
        <DataTemplate x:Key="ArrayMemberDataTemplate">
            <Expander Header="{Binding Value.StringType, Mode=OneWay}" IsExpanded="{Binding Value.IsExpanded}">
                <ListBox BorderThickness="0" Grid.IsSharedSizeScope="True" HorizontalContentAlignment="Stretch" ItemsSource="{Binding Value.Values}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" MaxWidth="200" SharedSizeGroup="PropNameColumn" />
                                    <ColumnDefinition Width="5" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="{Binding Name}" ToolTip="{Binding Name}" />
                                <ContentControl Grid.Column="2" Content="{Binding}" ContentTemplateSelector="{StaticResource ObjectMemberTemplateSelector}" />
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                            <Setter Property="Focusable" Value="False"/>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
            </Expander>

        </DataTemplate>
        <DataTemplate x:Key="UnknownMemberDataTemplate">
            <TextBlock Text="{Binding Value}" />
        </DataTemplate>
    </Window.Resources>
    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>
    <DockPanel>

        <StatusBar DockPanel.Dock="Bottom">
            <ComboBox Grid.Column="0" ItemsSource="{Binding Processes}" 
                          SelectedItem="{Binding Path=SelectedProcess, UpdateSourceTrigger=PropertyChanged}" 
                          Width="200"
                          IsEnabled="{Binding Processes, Converter={StaticResource ICollectionToBooleanConverter}, Mode=OneWay}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <Button Content="Get Processes" Command="{Binding RefreshCommand}"/>
            
            <StatusBarItem Visibility="{Binding IsConnected, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
                <Button Content="Disconnect" Command="{Binding DisconnectCommand}"/>
            </StatusBarItem>

            <StatusBarItem Visibility="{Binding IsConnected, Converter={StaticResource BooleanToVisibilityConverterInverted}, Mode=OneWay}">
                <Button Content="Inject" 
                        Command="{Binding InjectCommand}"
                        IsEnabled="{Binding Processes, Converter={StaticResource ICollectionToBooleanConverter}, Mode=OneWay}"/>
            </StatusBarItem>

            <Separator Visibility="{Binding IsConnected, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}" />
            <StackPanel Orientation="Horizontal" 
                        Visibility="{Binding IsConnected, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
                <Label VerticalAlignment="Center" Content="Refresh Rate (RPS):" />
                <Slider VerticalAlignment="Center" Width="150" Value="{Binding RefreshRate}" SmallChange="1" AutoToolTipPlacement="TopLeft" />
                <Button Margin="5,0,0,0" VerticalAlignment="Center" Content="Refresh" Command="{Binding RefreshTreeCommand}"/>
            </StackPanel>
            <StatusBarItem HorizontalAlignment="Right" >
                <Label Content="{Binding Status}" />
            </StatusBarItem>
        </StatusBar>
        <Grid Margin="5,5,5,3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>

            <TreeView Margin="0,0,3,0" x:Name="GameObjectsTree" Grid.Column="0"
                      ItemsSource="{Binding MainSceneGameObject.Children}">
                <TreeView.Resources>
                    <HierarchicalDataTemplate  DataType="{x:Type vm:GameObjectViewModel}" ItemsSource="{Binding Children}" />
                </TreeView.Resources>
                <TreeView.ItemContainerStyle>
                    <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=OneWayToSource}"/>
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=OneWayToSource}"/>
                        <Setter Property="Header" Value="{Binding Name}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Active}" Value="False">
                                <Setter Property="Foreground" Value="#919191" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TreeView.ItemContainerStyle>
            </TreeView>

            <GridSplitter Grid.Column ="0" Width="3"
                HorizontalAlignment="Right" VerticalAlignment="Stretch" />

            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="2*"/>
                </Grid.RowDefinitions>

                <ListBox Margin="0,0,0,3" x:Name="ComponantsList" Grid.Row="0"
                         ItemsSource="{Binding SelectedItem.Components, ElementName=GameObjectsTree}" >
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <CheckBox IsChecked="{Binding Enabled}" Visibility="{Binding Visibility}" />
                                <TextBlock Text="{Binding Name}" Margin="5,0,0,0" VerticalAlignment="Center"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

                <GridSplitter Grid.Row ="0" Height="3" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"/>
                <ListBox Grid.Row="1" Grid.IsSharedSizeScope="True" HorizontalAlignment="Stretch" ItemsSource="{Binding SelectedItem.Members, ElementName=ComponantsList}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" MaxWidth="200" SharedSizeGroup="PropNameColumn" />
                                    <ColumnDefinition Width="5" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="{Binding Name}" ToolTip="{Binding Name}" />
                                <ContentControl Grid.Column="2" Content="{Binding}" ContentTemplateSelector="{StaticResource ObjectMemberTemplateSelector}" />
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>

                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                            <Setter Property="Focusable" Value="False"/>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
            </Grid>
        </Grid>
    </DockPanel>

</Window>
